services:
  postgres:
    image: postgres:17
    container_name: artificial_u_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: artificial_u_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama
    container_name: artificial_u_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_NUM_THREADS=2
      - OLLAMA_NUM_GPU=0 # Disable GPU
      - OLLAMA_MODEL_PATH=/root/.ollama/models
    mem_limit: "1g"
    cpus: 2.0

  minio:
    image: minio/minio:latest
    container_name: artificial_u_minio
    ports:
      - "9000:9000" # API port
      - "9001:9001" # Console port
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO client for bucket setup
  mc:
    image: minio/mc
    container_name: artificial_u_mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c " until (/usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin) do echo '...waiting...' && sleep 1; done; /usr/bin/mc mb myminio/artificial-u-audio; /usr/bin/mc mb myminio/artificial-u-lectures; /usr/bin/mc mb myminio/artificial-u-images; /usr/bin/mc policy set download myminio/artificial-u-audio; /usr/bin/mc policy set download myminio/artificial-u-lectures; /usr/bin/mc policy set download myminio/artificial-u-images; exit 0; "

volumes:
  postgres_data:
  ollama_data:
  minio_data:
