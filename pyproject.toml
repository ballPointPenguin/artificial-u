[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "artificial-u"
version = "0.1.0"
description = "AI-powered educational content platform"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "AGPL-3.0"}
authors = [
    {name = "Ben Goldberg", email = "ben@ballpointpenguin.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Education",
]
keywords = ["education", "ai", "text-to-speech", "lecture"]
dependencies = [
    "alembic>=1.12.0",
    "anthropic>=0.18.1",
    "click>=8.1.7",
    "elevenlabs>=0.2.24",
    "fastapi>=0.115.0",
    "httpx>=0.28.0",
    "psycopg2-binary>=2.9.0",
    "pydantic-settings>=2.8.0",
    "pydantic>=2.11.3",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
    "rich>=13.6.0",
    "sqlalchemy>=2.0.23",
    "uvicorn[standard]>=0.34.0",
]

[project.optional-dependencies]
dev = [
    "ollama>=0.4.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-env>=1.0.0",
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.5.1",
    "pylint>=3.0.1",
]
test = [
    "ollama>=0.4.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-env>=1.0.0",
]

[project.urls]
"Homepage" = "https://github.com/ballPointPenguin/artificial-u"
"Bug Tracker" = "https://github.com/ballPointPenguin/artificial-u/issues"

[project.scripts]
artificial-u = "artificial_u.cli:cli"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "manual: Tests that require real API credentials and should be run manually",
    "slow: Tests that take a long time to run",
    "demo: Demonstration tests",
    "requires_db: Tests that require a database connection",
    "api: Tests for the API endpoints",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]
addopts = "-v -m \"not manual\""

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [".git", "venv", ".venv", ".mypy_cache", "__pycache__"]
known_first_party = ["artificial_u"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
follow_imports = "silent" 